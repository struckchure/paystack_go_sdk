/*
Paystack

The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.

API version: 1.0.0
Contact: techsupport@paystack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paystack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkChargeInitiate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkChargeInitiate{}

// BulkChargeInitiate struct for BulkChargeInitiate
type BulkChargeInitiate struct {
	// Customer's card authorization code
	Authorization string `json:"authorization"`
	// Amount to charge on the authorization
	Amount string `json:"amount"`
}

type _BulkChargeInitiate BulkChargeInitiate

// NewBulkChargeInitiate instantiates a new BulkChargeInitiate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkChargeInitiate(authorization string, amount string) *BulkChargeInitiate {
	this := BulkChargeInitiate{}
	this.Authorization = authorization
	this.Amount = amount
	return &this
}

// NewBulkChargeInitiateWithDefaults instantiates a new BulkChargeInitiate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkChargeInitiateWithDefaults() *BulkChargeInitiate {
	this := BulkChargeInitiate{}
	return &this
}

// GetAuthorization returns the Authorization field value
func (o *BulkChargeInitiate) GetAuthorization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value
// and a boolean to check if the value has been set.
func (o *BulkChargeInitiate) GetAuthorizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authorization, true
}

// SetAuthorization sets field value
func (o *BulkChargeInitiate) SetAuthorization(v string) {
	o.Authorization = v
}

// GetAmount returns the Amount field value
func (o *BulkChargeInitiate) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BulkChargeInitiate) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BulkChargeInitiate) SetAmount(v string) {
	o.Amount = v
}

func (o BulkChargeInitiate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkChargeInitiate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authorization"] = o.Authorization
	toSerialize["amount"] = o.Amount
	return toSerialize, nil
}

func (o *BulkChargeInitiate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authorization",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkChargeInitiate := _BulkChargeInitiate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkChargeInitiate)

	if err != nil {
		return err
	}

	*o = BulkChargeInitiate(varBulkChargeInitiate)

	return err
}

type NullableBulkChargeInitiate struct {
	value *BulkChargeInitiate
	isSet bool
}

func (v NullableBulkChargeInitiate) Get() *BulkChargeInitiate {
	return v.value
}

func (v *NullableBulkChargeInitiate) Set(val *BulkChargeInitiate) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkChargeInitiate) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkChargeInitiate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkChargeInitiate(val *BulkChargeInitiate) *NullableBulkChargeInitiate {
	return &NullableBulkChargeInitiate{value: val, isSet: true}
}

func (v NullableBulkChargeInitiate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkChargeInitiate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


