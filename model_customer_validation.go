/*
Paystack

The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.

API version: 1.0.0
Contact: techsupport@paystack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paystack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerValidation{}

// CustomerValidation struct for CustomerValidation
type CustomerValidation struct {
	// Customer's first name
	FirstName string `json:"first_name"`
	// Customer's last name
	LastName string `json:"last_name"`
	// Predefined types of identification.
	Type string `json:"type"`
	// Two-letter country code of identification issuer
	Country string `json:"country"`
	// Customer's Bank Verification Number
	Bvn string `json:"bvn"`
	// You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).
	BankCode string `json:"bank_code"`
	// Customer's bank account number.
	AccountNumber string `json:"account_number"`
	// Customer's identification number. Required if type is bvn
	Value *string `json:"value,omitempty"`
}

type _CustomerValidation CustomerValidation

// NewCustomerValidation instantiates a new CustomerValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerValidation(firstName string, lastName string, type_ string, country string, bvn string, bankCode string, accountNumber string) *CustomerValidation {
	this := CustomerValidation{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Type = type_
	this.Country = country
	this.Bvn = bvn
	this.BankCode = bankCode
	this.AccountNumber = accountNumber
	return &this
}

// NewCustomerValidationWithDefaults instantiates a new CustomerValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerValidationWithDefaults() *CustomerValidation {
	this := CustomerValidation{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *CustomerValidation) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CustomerValidation) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *CustomerValidation) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CustomerValidation) SetLastName(v string) {
	o.LastName = v
}

// GetType returns the Type field value
func (o *CustomerValidation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomerValidation) SetType(v string) {
	o.Type = v
}

// GetCountry returns the Country field value
func (o *CustomerValidation) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CustomerValidation) SetCountry(v string) {
	o.Country = v
}

// GetBvn returns the Bvn field value
func (o *CustomerValidation) GetBvn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bvn
}

// GetBvnOk returns a tuple with the Bvn field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetBvnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bvn, true
}

// SetBvn sets field value
func (o *CustomerValidation) SetBvn(v string) {
	o.Bvn = v
}

// GetBankCode returns the BankCode field value
func (o *CustomerValidation) GetBankCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankCode, true
}

// SetBankCode sets field value
func (o *CustomerValidation) SetBankCode(v string) {
	o.BankCode = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *CustomerValidation) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *CustomerValidation) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CustomerValidation) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerValidation) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CustomerValidation) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CustomerValidation) SetValue(v string) {
	o.Value = &v
}

func (o CustomerValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	toSerialize["type"] = o.Type
	toSerialize["country"] = o.Country
	toSerialize["bvn"] = o.Bvn
	toSerialize["bank_code"] = o.BankCode
	toSerialize["account_number"] = o.AccountNumber
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *CustomerValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"first_name",
		"last_name",
		"type",
		"country",
		"bvn",
		"bank_code",
		"account_number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerValidation := _CustomerValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerValidation)

	if err != nil {
		return err
	}

	*o = CustomerValidation(varCustomerValidation)

	return err
}

type NullableCustomerValidation struct {
	value *CustomerValidation
	isSet bool
}

func (v NullableCustomerValidation) Get() *CustomerValidation {
	return v.value
}

func (v *NullableCustomerValidation) Set(val *CustomerValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerValidation(val *CustomerValidation) *NullableCustomerValidation {
	return &NullableCustomerValidation{value: val, isSet: true}
}

func (v NullableCustomerValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


