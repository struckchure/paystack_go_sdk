/*
Paystack

The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.

API version: 1.0.0
Contact: techsupport@paystack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paystack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransferRecipientCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferRecipientCreate{}

// TransferRecipientCreate struct for TransferRecipientCreate
type TransferRecipientCreate struct {
	// Recipient Type (Only nuban at this time)
	Type string `json:"type"`
	// Recipient's name
	Name string `json:"name"`
	// Recipient's bank account number
	AccountNumber string `json:"account_number"`
	// Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint
	BankCode string `json:"bank_code"`
	// A description for this recipient
	Description *string `json:"description,omitempty"`
	// Currency for the account receiving the transfer
	Currency *string `json:"currency,omitempty"`
	// An authorization code from a previous transaction
	AuthorizationCode *string `json:"authorization_code,omitempty"`
	// Stringified JSON object of custom data
	Metadata *string `json:"metadata,omitempty"`
}

type _TransferRecipientCreate TransferRecipientCreate

// NewTransferRecipientCreate instantiates a new TransferRecipientCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferRecipientCreate(type_ string, name string, accountNumber string, bankCode string) *TransferRecipientCreate {
	this := TransferRecipientCreate{}
	this.Type = type_
	this.Name = name
	this.AccountNumber = accountNumber
	this.BankCode = bankCode
	return &this
}

// NewTransferRecipientCreateWithDefaults instantiates a new TransferRecipientCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferRecipientCreateWithDefaults() *TransferRecipientCreate {
	this := TransferRecipientCreate{}
	return &this
}

// GetType returns the Type field value
func (o *TransferRecipientCreate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransferRecipientCreate) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *TransferRecipientCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TransferRecipientCreate) SetName(v string) {
	o.Name = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *TransferRecipientCreate) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *TransferRecipientCreate) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetBankCode returns the BankCode field value
func (o *TransferRecipientCreate) GetBankCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankCode, true
}

// SetBankCode sets field value
func (o *TransferRecipientCreate) SetBankCode(v string) {
	o.BankCode = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransferRecipientCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransferRecipientCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransferRecipientCreate) SetDescription(v string) {
	o.Description = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *TransferRecipientCreate) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *TransferRecipientCreate) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *TransferRecipientCreate) SetCurrency(v string) {
	o.Currency = &v
}

// GetAuthorizationCode returns the AuthorizationCode field value if set, zero value otherwise.
func (o *TransferRecipientCreate) GetAuthorizationCode() string {
	if o == nil || IsNil(o.AuthorizationCode) {
		var ret string
		return ret
	}
	return *o.AuthorizationCode
}

// GetAuthorizationCodeOk returns a tuple with the AuthorizationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetAuthorizationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationCode) {
		return nil, false
	}
	return o.AuthorizationCode, true
}

// HasAuthorizationCode returns a boolean if a field has been set.
func (o *TransferRecipientCreate) HasAuthorizationCode() bool {
	if o != nil && !IsNil(o.AuthorizationCode) {
		return true
	}

	return false
}

// SetAuthorizationCode gets a reference to the given string and assigns it to the AuthorizationCode field.
func (o *TransferRecipientCreate) SetAuthorizationCode(v string) {
	o.AuthorizationCode = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *TransferRecipientCreate) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRecipientCreate) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TransferRecipientCreate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *TransferRecipientCreate) SetMetadata(v string) {
	o.Metadata = &v
}

func (o TransferRecipientCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferRecipientCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["account_number"] = o.AccountNumber
	toSerialize["bank_code"] = o.BankCode
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.AuthorizationCode) {
		toSerialize["authorization_code"] = o.AuthorizationCode
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

func (o *TransferRecipientCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"name",
		"account_number",
		"bank_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransferRecipientCreate := _TransferRecipientCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransferRecipientCreate)

	if err != nil {
		return err
	}

	*o = TransferRecipientCreate(varTransferRecipientCreate)

	return err
}

type NullableTransferRecipientCreate struct {
	value *TransferRecipientCreate
	isSet bool
}

func (v NullableTransferRecipientCreate) Get() *TransferRecipientCreate {
	return v.value
}

func (v *NullableTransferRecipientCreate) Set(val *TransferRecipientCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferRecipientCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferRecipientCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferRecipientCreate(val *TransferRecipientCreate) *NullableTransferRecipientCreate {
	return &NullableTransferRecipientCreate{value: val, isSet: true}
}

func (v NullableTransferRecipientCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferRecipientCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


