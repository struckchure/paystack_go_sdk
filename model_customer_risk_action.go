/*
Paystack

The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.

API version: 1.0.0
Contact: techsupport@paystack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paystack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerRiskAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerRiskAction{}

// CustomerRiskAction struct for CustomerRiskAction
type CustomerRiskAction struct {
	// Customer's code, or email address
	Customer string `json:"customer"`
	// One of the possible risk actions [ default, allow, deny ]. allow to whitelist.  deny to blacklist. Customers start with a default risk action. 
	RiskAction *string `json:"risk_action,omitempty"`
}

type _CustomerRiskAction CustomerRiskAction

// NewCustomerRiskAction instantiates a new CustomerRiskAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerRiskAction(customer string) *CustomerRiskAction {
	this := CustomerRiskAction{}
	this.Customer = customer
	return &this
}

// NewCustomerRiskActionWithDefaults instantiates a new CustomerRiskAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerRiskActionWithDefaults() *CustomerRiskAction {
	this := CustomerRiskAction{}
	return &this
}

// GetCustomer returns the Customer field value
func (o *CustomerRiskAction) GetCustomer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *CustomerRiskAction) GetCustomerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *CustomerRiskAction) SetCustomer(v string) {
	o.Customer = v
}

// GetRiskAction returns the RiskAction field value if set, zero value otherwise.
func (o *CustomerRiskAction) GetRiskAction() string {
	if o == nil || IsNil(o.RiskAction) {
		var ret string
		return ret
	}
	return *o.RiskAction
}

// GetRiskActionOk returns a tuple with the RiskAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerRiskAction) GetRiskActionOk() (*string, bool) {
	if o == nil || IsNil(o.RiskAction) {
		return nil, false
	}
	return o.RiskAction, true
}

// HasRiskAction returns a boolean if a field has been set.
func (o *CustomerRiskAction) HasRiskAction() bool {
	if o != nil && !IsNil(o.RiskAction) {
		return true
	}

	return false
}

// SetRiskAction gets a reference to the given string and assigns it to the RiskAction field.
func (o *CustomerRiskAction) SetRiskAction(v string) {
	o.RiskAction = &v
}

func (o CustomerRiskAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerRiskAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer"] = o.Customer
	if !IsNil(o.RiskAction) {
		toSerialize["risk_action"] = o.RiskAction
	}
	return toSerialize, nil
}

func (o *CustomerRiskAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerRiskAction := _CustomerRiskAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerRiskAction)

	if err != nil {
		return err
	}

	*o = CustomerRiskAction(varCustomerRiskAction)

	return err
}

type NullableCustomerRiskAction struct {
	value *CustomerRiskAction
	isSet bool
}

func (v NullableCustomerRiskAction) Get() *CustomerRiskAction {
	return v.value
}

func (v *NullableCustomerRiskAction) Set(val *CustomerRiskAction) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerRiskAction) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerRiskAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerRiskAction(val *CustomerRiskAction) *NullableCustomerRiskAction {
	return &NullableCustomerRiskAction{value: val, isSet: true}
}

func (v NullableCustomerRiskAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerRiskAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


